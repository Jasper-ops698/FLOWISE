"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MomentoErrorCodeMetadataConverter = void 0;
const sdk_core_1 = require("@gomomento/sdk-core");
class MomentoErrorCodeMetadataConverter {
    /**
     * Converts a MomentoErrorCode enum value to its corresponding metadata type.
     * @param errorCode - The error code to convert.
     * @returns The corresponding metadata type.
     */
    static convert(errorCode) {
        const metadataType = this.momentoErrorCodeToMetadataMap[errorCode];
        if (!metadataType) {
            throw new Error(`Unsupported MomentoErrorCode: ${errorCode}`);
        }
        return metadataType;
    }
}
exports.MomentoErrorCodeMetadataConverter = MomentoErrorCodeMetadataConverter;
MomentoErrorCodeMetadataConverter.momentoErrorCodeToMetadataMap = {
    [sdk_core_1.MomentoErrorCode.INVALID_ARGUMENT_ERROR]: 'invalid-argument',
    [sdk_core_1.MomentoErrorCode.UNKNOWN_SERVICE_ERROR]: 'unknown',
    [sdk_core_1.MomentoErrorCode.CACHE_ALREADY_EXISTS_ERROR]: 'already-exists',
    [sdk_core_1.MomentoErrorCode.ALREADY_EXISTS_ERROR]: 'already-exists',
    [sdk_core_1.MomentoErrorCode.STORE_ALREADY_EXISTS_ERROR]: 'already-exists',
    [sdk_core_1.MomentoErrorCode.CACHE_NOT_FOUND_ERROR]: 'not-found',
    [sdk_core_1.MomentoErrorCode.NOT_FOUND_ERROR]: 'not-found',
    [sdk_core_1.MomentoErrorCode.STORE_NOT_FOUND_ERROR]: 'not-found',
    [sdk_core_1.MomentoErrorCode.STORE_ITEM_NOT_FOUND_ERROR]: 'not-found',
    [sdk_core_1.MomentoErrorCode.INTERNAL_SERVER_ERROR]: 'internal',
    [sdk_core_1.MomentoErrorCode.PERMISSION_ERROR]: 'permission-denied',
    [sdk_core_1.MomentoErrorCode.AUTHENTICATION_ERROR]: 'unauthenticated',
    [sdk_core_1.MomentoErrorCode.CANCELLED_ERROR]: 'cancelled',
    [sdk_core_1.MomentoErrorCode.CONNECTION_ERROR]: 'unavailable',
    [sdk_core_1.MomentoErrorCode.LIMIT_EXCEEDED_ERROR]: 'deadline-exceeded',
    [sdk_core_1.MomentoErrorCode.BAD_REQUEST_ERROR]: 'invalid-argument',
    [sdk_core_1.MomentoErrorCode.TIMEOUT_ERROR]: 'deadline-exceeded',
    [sdk_core_1.MomentoErrorCode.SERVER_UNAVAILABLE]: 'unavailable',
    [sdk_core_1.MomentoErrorCode.CLIENT_RESOURCE_EXHAUSTED]: 'resource-exhausted',
    [sdk_core_1.MomentoErrorCode.FAILED_PRECONDITION_ERROR]: 'failed-precondition',
    [sdk_core_1.MomentoErrorCode.UNKNOWN_ERROR]: 'unknown',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9tZW50by1lcnJvci1jb2RlLW1ldGFkYXRhLWNvbnZlcnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb25maWcvcmV0cnkvbW9tZW50by1lcnJvci1jb2RlLW1ldGFkYXRhLWNvbnZlcnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrREFBcUQ7QUFFckQsTUFBTSxpQ0FBaUM7SUE0QnJDOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQWlCO1FBQ3JDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ2pCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLFNBQVMsRUFBRSxDQUFDLENBQUM7U0FDL0Q7UUFDRCxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDOztBQUdLLDhFQUFpQztBQXpDZiwrREFBNkIsR0FHakQ7SUFDRixDQUFDLDJCQUFnQixDQUFDLHNCQUFzQixDQUFDLEVBQUUsa0JBQWtCO0lBQzdELENBQUMsMkJBQWdCLENBQUMscUJBQXFCLENBQUMsRUFBRSxTQUFTO0lBQ25ELENBQUMsMkJBQWdCLENBQUMsMEJBQTBCLENBQUMsRUFBRSxnQkFBZ0I7SUFDL0QsQ0FBQywyQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLGdCQUFnQjtJQUN6RCxDQUFDLDJCQUFnQixDQUFDLDBCQUEwQixDQUFDLEVBQUUsZ0JBQWdCO0lBQy9ELENBQUMsMkJBQWdCLENBQUMscUJBQXFCLENBQUMsRUFBRSxXQUFXO0lBQ3JELENBQUMsMkJBQWdCLENBQUMsZUFBZSxDQUFDLEVBQUUsV0FBVztJQUMvQyxDQUFDLDJCQUFnQixDQUFDLHFCQUFxQixDQUFDLEVBQUUsV0FBVztJQUNyRCxDQUFDLDJCQUFnQixDQUFDLDBCQUEwQixDQUFDLEVBQUUsV0FBVztJQUMxRCxDQUFDLDJCQUFnQixDQUFDLHFCQUFxQixDQUFDLEVBQUUsVUFBVTtJQUNwRCxDQUFDLDJCQUFnQixDQUFDLGdCQUFnQixDQUFDLEVBQUUsbUJBQW1CO0lBQ3hELENBQUMsMkJBQWdCLENBQUMsb0JBQW9CLENBQUMsRUFBRSxpQkFBaUI7SUFDMUQsQ0FBQywyQkFBZ0IsQ0FBQyxlQUFlLENBQUMsRUFBRSxXQUFXO0lBQy9DLENBQUMsMkJBQWdCLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxhQUFhO0lBQ2xELENBQUMsMkJBQWdCLENBQUMsb0JBQW9CLENBQUMsRUFBRSxtQkFBbUI7SUFDNUQsQ0FBQywyQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLGtCQUFrQjtJQUN4RCxDQUFDLDJCQUFnQixDQUFDLGFBQWEsQ0FBQyxFQUFFLG1CQUFtQjtJQUNyRCxDQUFDLDJCQUFnQixDQUFDLGtCQUFrQixDQUFDLEVBQUUsYUFBYTtJQUNwRCxDQUFDLDJCQUFnQixDQUFDLHlCQUF5QixDQUFDLEVBQUUsb0JBQW9CO0lBQ2xFLENBQUMsMkJBQWdCLENBQUMseUJBQXlCLENBQUMsRUFBRSxxQkFBcUI7SUFDbkUsQ0FBQywyQkFBZ0IsQ0FBQyxhQUFhLENBQUMsRUFBRSxTQUFTO0NBQzVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vbWVudG9FcnJvckNvZGV9IGZyb20gJ0Bnb21vbWVudG8vc2RrLWNvcmUnO1xuXG5jbGFzcyBNb21lbnRvRXJyb3JDb2RlTWV0YWRhdGFDb252ZXJ0ZXIge1xuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBtb21lbnRvRXJyb3JDb2RlVG9NZXRhZGF0YU1hcDogUmVjb3JkPFxuICAgIHN0cmluZyxcbiAgICBzdHJpbmdcbiAgPiA9IHtcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5JTlZBTElEX0FSR1VNRU5UX0VSUk9SXTogJ2ludmFsaWQtYXJndW1lbnQnLFxuICAgIFtNb21lbnRvRXJyb3JDb2RlLlVOS05PV05fU0VSVklDRV9FUlJPUl06ICd1bmtub3duJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5DQUNIRV9BTFJFQURZX0VYSVNUU19FUlJPUl06ICdhbHJlYWR5LWV4aXN0cycsXG4gICAgW01vbWVudG9FcnJvckNvZGUuQUxSRUFEWV9FWElTVFNfRVJST1JdOiAnYWxyZWFkeS1leGlzdHMnLFxuICAgIFtNb21lbnRvRXJyb3JDb2RlLlNUT1JFX0FMUkVBRFlfRVhJU1RTX0VSUk9SXTogJ2FscmVhZHktZXhpc3RzJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5DQUNIRV9OT1RfRk9VTkRfRVJST1JdOiAnbm90LWZvdW5kJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5OT1RfRk9VTkRfRVJST1JdOiAnbm90LWZvdW5kJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5TVE9SRV9OT1RfRk9VTkRfRVJST1JdOiAnbm90LWZvdW5kJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5TVE9SRV9JVEVNX05PVF9GT1VORF9FUlJPUl06ICdub3QtZm91bmQnLFxuICAgIFtNb21lbnRvRXJyb3JDb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUl06ICdpbnRlcm5hbCcsXG4gICAgW01vbWVudG9FcnJvckNvZGUuUEVSTUlTU0lPTl9FUlJPUl06ICdwZXJtaXNzaW9uLWRlbmllZCcsXG4gICAgW01vbWVudG9FcnJvckNvZGUuQVVUSEVOVElDQVRJT05fRVJST1JdOiAndW5hdXRoZW50aWNhdGVkJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5DQU5DRUxMRURfRVJST1JdOiAnY2FuY2VsbGVkJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5DT05ORUNUSU9OX0VSUk9SXTogJ3VuYXZhaWxhYmxlJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5MSU1JVF9FWENFRURFRF9FUlJPUl06ICdkZWFkbGluZS1leGNlZWRlZCcsXG4gICAgW01vbWVudG9FcnJvckNvZGUuQkFEX1JFUVVFU1RfRVJST1JdOiAnaW52YWxpZC1hcmd1bWVudCcsXG4gICAgW01vbWVudG9FcnJvckNvZGUuVElNRU9VVF9FUlJPUl06ICdkZWFkbGluZS1leGNlZWRlZCcsXG4gICAgW01vbWVudG9FcnJvckNvZGUuU0VSVkVSX1VOQVZBSUxBQkxFXTogJ3VuYXZhaWxhYmxlJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5DTElFTlRfUkVTT1VSQ0VfRVhIQVVTVEVEXTogJ3Jlc291cmNlLWV4aGF1c3RlZCcsXG4gICAgW01vbWVudG9FcnJvckNvZGUuRkFJTEVEX1BSRUNPTkRJVElPTl9FUlJPUl06ICdmYWlsZWQtcHJlY29uZGl0aW9uJyxcbiAgICBbTW9tZW50b0Vycm9yQ29kZS5VTktOT1dOX0VSUk9SXTogJ3Vua25vd24nLFxuICB9O1xuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhIE1vbWVudG9FcnJvckNvZGUgZW51bSB2YWx1ZSB0byBpdHMgY29ycmVzcG9uZGluZyBtZXRhZGF0YSB0eXBlLlxuICAgKiBAcGFyYW0gZXJyb3JDb2RlIC0gVGhlIGVycm9yIGNvZGUgdG8gY29udmVydC5cbiAgICogQHJldHVybnMgVGhlIGNvcnJlc3BvbmRpbmcgbWV0YWRhdGEgdHlwZS5cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgY29udmVydChlcnJvckNvZGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3QgbWV0YWRhdGFUeXBlID0gdGhpcy5tb21lbnRvRXJyb3JDb2RlVG9NZXRhZGF0YU1hcFtlcnJvckNvZGVdO1xuICAgIGlmICghbWV0YWRhdGFUeXBlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIE1vbWVudG9FcnJvckNvZGU6ICR7ZXJyb3JDb2RlfWApO1xuICAgIH1cbiAgICByZXR1cm4gbWV0YWRhdGFUeXBlO1xuICB9XG59XG5cbmV4cG9ydCB7TW9tZW50b0Vycm9yQ29kZU1ldGFkYXRhQ29udmVydGVyfTtcbiJdfQ==